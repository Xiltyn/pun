.new-character--classes {
	.cards {
		display: flex;
		width: 100%;
		flex-wrap: wrap;
		align-items: center;
		justify-content: space-around;
		overflow: hidden;
		.class-card {
			position: relative;
			top: 0;
			width: 277px;
			height: 400px;
			background-color: $BACKGROUND;
			margin: 0 .8rem 2.4rem;
			transform: scale(.98);
			cursor: pointer;
			box-shadow: $GLOW_SM_DIM;
			transition: all .3s ease-out;
			h3 {
				width: 100%;
				text-align: center;
				transition: inherit;
			}
			svg {
				position: absolute;
				display: block;
				width: 100%;
				height: auto;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				& > g > path {
					fill: rgba( $BASE, .3 );
					transition: all .3s ease-out;
				}
			}
			.symbol {
				svg {
					position: relative;
					top: 0;
					left: 0;
					padding: 2.4rem 0 .8rem;
					transform: translate( 0, 0 ) scale( .8 );
				}
			}
			&:hover {
				//transform: scale(1);
				box-shadow: $SH_LARGE;
				h3 {
					color: $PRIMARY;
				}
				svg > g > path {
					fill: $PRIMARY;
				}
				.symbol {
					svg > g > path {
						fill: $PRIMARY;
						box-shadow: $SH_MEDIUM_STRONG;
					}
				}
			}
			&.active {
				position: absolute;
				top: 15.2rem;
				left: 0;
				z-index: $LAYER_6;
				box-shadow: $SH_LARGE;
				transform: scale(1);
				pointer-events: none;

				@media screen and (max-width: 1440px) {
					top: 0;
				}
				h3 {
					color: $PRIMARY;
				}
				svg > g > path {
					fill: $PRIMARY;
				}
			}
			&.bard:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $BARD;
				}
				svg > g > path {
					fill: $BARD;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $BARD;
							box-shadow: $SH_MEDIUM_STRONG;
						}
					}
				}
			}
			&.barbarian:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $BARBARIAN;
				}
				svg > g > path {
					fill: $BARBARIAN;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $BARBARIAN
						}
					}
				}
			}
			&.wizard:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $WIZARD;
				}
				svg > g > path {
					fill: $WIZARD;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $WIZARD
						}
					}
				}
			}
			&.warlock:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $WARLOCK;
				}
				svg > g > path {
					fill: $WARLOCK;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $WARLOCK
						}
					}
				}
			}
			&.sorcerer:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $SORCERER;
				}
				svg > g > path {
					fill: $SORCERER;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $SORCERER
						}
					}
				}
			}
			&.rogue:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $ROGUE;
				}
				svg > g > path {
					fill: $ROGUE;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $ROGUE
						}
					}
				}
			}
			&.ranger:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $RANGER;
				}
				svg > g > path {
					fill: $RANGER;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $RANGER
						}
					}
				}
			}
			&.paladin:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $PALADIN;
				}
				svg > g > path {
					fill: $PALADIN;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $PALADIN
						}
					}
				}
			}
			&.monk:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $MONK;
				}
				svg > g > path {
					fill: $MONK;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $MONK
						}
					}
				}
			}
			&.fighter:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $FIGHTER;
				}
				svg > g > path {
					fill: $FIGHTER;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $FIGHTER
						}
					}
				}
			}
			&.cleric:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $CLERIC;
				}
				svg > g > path {
					fill: $CLERIC;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $CLERIC
						}
					}
				}
			}
			&.druid:hover {
				box-shadow: $SH_LARGE;
				h3 {
					color: $DRUID;
				}
				svg > g > path {
					fill: $DRUID;
				}
				.symbol {
					svg {
						& > g > path {
							fill: $DRUID
						}
					}
				}
			}
		}
	}
	.details {
		position: fixed;
		left: 0;
		top: 0;
		width: 100%;
		height: 100vh;
		padding-top: 280px;
		background: $BACKGROUND;
		opacity: 0;
		pointer-events: none;
		z-index: $LAYER_1;
		box-sizing: border-box;
		transform: translateY( 150px );
		transition: all .3s ease-in;
		overflow: auto;

		@media screen and (max-width: 1280px) {
			padding-top: 16rem;
		}

		&::-webkit-scrollbar {
			width: .4rem;
		}

		&::-webkit-scrollbar-track {
			background: none;
		}

		&::-webkit-scrollbar-thumb {
			width: .2rem;
			border-radius: 10px;
			background: rgba( $BASE, .3 );
		}
		.description {
			font-size: 2.2rem;
			font-weight: 400;
			line-height: 3rem;
			text-align: justify;
			opacity: 0;
			padding: 0 4.8rem 0 640px;

			@media screen and ( max-width: 1440px ) {
				padding-left: 580px;
			}

		}
		.base-info {
			width: 100%;
			.stripe {
				display: flex;
				flex-wrap: wrap;
				width: 100%;
				margin: 3.2rem 0;
				padding: 0 4.8rem 0 640px;
				text-align: center;
				pointer-events: none;
				justify-content: flex-start;
				border-top: 1px solid rgba( $BASE, .3 );
				border-bottom: 1px solid rgba( $BASE, .3 );
				box-sizing: border-box;

				@media screen and ( max-width: 1440px ) {
					padding-left: 580px;
				}

				&:nth-of-type(2) {
					margin-top: -2.4rem;

				}
				.size,
				.speed,
				.abilities {
					height: 5.6rem;
					margin-left: 2.4rem;
					.label {
						position: absolute;
						top: 1.6rem;
						left: -4rem;
						height: 2.4rem;
						width: 5.6rem;
						font-weight: 600;
						background: rgba( $BASE, .3 );
						transform: rotate(-90deg);
					}
					.value {
						height: 5.6rem;
						font-size: 5.6rem;
						line-height: 6.8rem;
						border-right: 1px solid rgba( $BASE, .3 );
					}
				}
				.hit-dice {
					display: flex;
					flex-wrap: nowrap;
					justify-content: space-between;
					width: 100%;
					align-items: center;
					li {
						display: flex;
						align-items: center;
						justify-content: flex-start;
						height: 5.6rem;
						.label {
							background: $PRIMARY;
							transform: rotate(90deg);
							width: 5.6rem;
						}
						.value {
							padding-top: .8rem;
						}
					}
				}
				.abilities {
					width: 16rem;
					display: flex;
					justify-content: space-between;
					.stat-box {
						position: relative;
						width: 44%;
						.value {
							border-right: none;
						}
						&:last-of-type {
							.value {
								border-right: 1px solid rgba( $BASE, .3 );
							}
						}
					}
				}
			}
			.proficiency {
				display: flex;
				padding: 0 4.8rem 4.8rem 640px;
				text-align: center;

				@media screen and ( max-width: 1440px ) {
					padding-left: 580px;
				}

				&--element {
					position: relative;
					display: block;
					width: 150px;
					margin-left: 1.6rem;
					padding: .2rem .4rem 0;
					background: $PRIMARY;
					&:after {
						content: 'Proficiency';
						position: absolute;
						top: 100%;
						left: 0;
						width: 100%;
						font-size: 1rem;
						font-weight: 600;
						color: $PRIMARY;
						font-family: $ROBOTO;
						margin-left: -.2rem;
						text-align: right;
					}
				}
			}
			.level-wrapper {
				padding: 0 4.8rem 0 640px;

				@media screen and ( max-width: 1440px ) {
					padding-left: 580px;
				}

				.level {
					display: flex;
					flex-wrap: wrap;

					h3 {
						width: 100%;
						padding-bottom: 2.4rem;
					}

					.feat {
						position: relative;
						width: 100%;
						margin: 0 0 2.4rem;
						height: 300px;
						padding: 1.6rem;
						box-sizing: border-box;
						box-shadow: $SH_MEDIUM;
						overflow-y: scroll;
						transition: all .3s ease-in;

						&.prerequisit {
							opacity: 0;
							pointer-events: none;
							height: 0;
							padding: 0 1.6rem;
							margin: 0;
							overflow: hidden;

							.name {
								padding: 2.4rem 0;
							}

							&.selected {
								opacity: 1;
								pointer-events: all;
								margin: 0 0 2.4rem;
								height: 300px;
								padding: 1.6rem;
							}

							&:after {
								content: 'from your chosen feature';
								position: absolute;
								top: 0;
								left: 0;
								width: 100%;
								height: 3.2rem;
								padding: 1.2rem 1.6rem 0;
								background: $SECONDARY;
								color: $BACKGROUND;
								font-weight: 800;
								font-family: $JAAPOKKI;
								font-size: 1.2rem;
								letter-spacing: .1rem;
								text-align: center;
								text-transform: uppercase;
								transition: all .3s ease-in;
								box-sizing: border-box;
								z-index: $LAYER_3;
							}
						}

						&::-webkit-scrollbar {
							width: .4rem;
						}

						&::-webkit-scrollbar-track {
							background: none;
						}

						&::-webkit-scrollbar-thumb {
							width: .2rem;
							border-radius: 10px;
							background: rgba( $BASE, .3 );
						}

						@media screen and ( max-width: 1440px ) {
							height: 200px;
						}

						.name {
							position: relative;
							padding-bottom: 2.4rem;
							transition: all .3s ease-in;
							z-index: $LAYER_4;
						}

						p {
							position: relative;
							transition: all .3s ease-in;
							z-index: $LAYER_4;
						}

						&:hover {
							.name {
								color: $PRIMARY;
							}
						}

						&.optional {
							cursor: pointer;
							opacity: 0;
							pointer-events: none;
							height: 0;
							padding: 0 1.6rem;
							margin: 0;
							overflow: hidden;

							.name {
								padding: 2.4rem 0;
							}

							&:after {
								content: 'optional';
								position: absolute;
								top: 0;
								left: 0;
								width: 100%;
								height: 3.2rem;
								padding: 1.2rem 1.6rem 0;
								background: $PRIMARY;
								color: $BACKGROUND;
								font-weight: 800;
								font-family: $JAAPOKKI;
								font-size: 1.2rem;
								letter-spacing: .1rem;
								text-align: center;
								text-transform: uppercase;
								transition: all .3s ease-in;
								box-sizing: border-box;
								z-index: $LAYER_3;
							}

							&:hover {
								background: $PRIMARY;

								.name, p {
									color: $BACKGROUND;
								}

								&:after {
									height: 100%;
								}
							}

							&.active {
								background: $SECONDARY;

								.name, p {
									color: $BACKGROUND;
								}

								&:after {
									content: 'chosen';
									height: 100%;
									background: $SECONDARY;
								}
							}

							&.visible {
								opacity: 1;
								pointer-events: all;
								margin: 0 0 2.4rem;
								height: 300px;
								padding: 1.6rem;
							}
						}
					}
				}
			}
		}
		&.active {
			opacity: 1;
			transform: translateY( 0 );
			pointer-events: all;
			.description {
				opacity: 1;
			}
		}
		.close-wrapper {
			position: absolute;
			top: 200px;
			margin-left: -8rem;

			@media screen and ( max-width: 1440px ) {
				top: 10.4rem;
			}

			.close {
				&.active {
					background: $PRIMARY;
					transform: rotate(-45deg);
					&:after {
						transform: rotate(90deg);
					}
				}
			}
			&:hover {
				.close {
					transform: rotate(45deg);
					&:after {
						transform: rotate(270deg);
					}
				}
			}
		}
		.class-card {
			position: relative;
			top: 0;
			width: 277px;
			height: 400px;
			background-color: $BACKGROUND;
			margin: 0 .8rem 2.4rem;
			transform: scale(.98);
			cursor: pointer;
			box-shadow: $GLOW_SM_DIM;
			transition: all .3s ease-out;
			h3 {
				width: 100%;
				text-align: center;
				transition: inherit;
			}
			svg {
				position: absolute;
				display: block;
				width: 100%;
				height: auto;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				& > g > path {
					fill: rgba( $BASE, .3 );
					transition: all .3s ease-out;
				}
			}
			.symbol {
				svg {
					position: relative;
					top: 0;
					left: 0;
					padding: 2.4rem 0 .8rem;
					transform: translate( 0, 0 ) scale( .8 );
				}
			}
			&.active {
				position: absolute;
				top: 27.2rem;
				left: 32rem;
				z-index: $LAYER_6;
				box-shadow: $SH_LARGE;
				transform: scale(1);

				@media screen and ( max-width: 1440px ) {
					top: 15.2rem;
					left: 24.8rem;
				}

				h3 {
					color: $PRIMARY;
				}
				svg > g > path {
					fill: $PRIMARY;
				}
			}
		}
		button {
			position: fixed;
			display: block;
			top: 750px;
			left: 352px;
			background: rgba( $BASE, .3 );
			pointer-events: all;

			@media screen and ( max-width: 1440px ) {
				top: 600px;
				left: 276px;
			}
			&:hover {
				background: $PRIMARY
			}
		}

		&.bard {
			h3 {
				color: $BARD;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $BARD;
				}
				.proficiency {
					&--element {
						background: $BARD;
						&:after {
							color: $BARD;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $BARD;
							}
						}
						.optional {
							&:after {
								background: $BARD;
							}
							&:hover {
								background: $BARD;
								.name {
									color: $BARD;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $BARD;
					}
					svg > g > path {
						fill: $BARD;
					}
				}
			}
			button:hover {
				background: $BARD;
			}
			.close-wrapper .close {
				&.active {
					background: $BARD;
				}
			}

		}
		&.barbarian {
			h3 {
				color: $BARBARIAN;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $BARBARIAN;
				}
				.proficiency {
					&--element {
						background: $BARBARIAN;
						&:after {
							color: $BARBARIAN;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $BARBARIAN;
							}
						}
						.prerequisit {
							&:after {
								background: $BARBARIAN;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $BARBARIAN;
								}
							}
							&:after {
								background: $BARBARIAN;
							}
							&:hover {
								background: $BARBARIAN;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $BARBARIAN;
					}
					svg > g > path {
						fill: $BARBARIAN;
					}
				}
			}
			button:hover {
				background: $BARBARIAN;
			}
			.close-wrapper .close {
				&.active {
					background: $BARBARIAN;
				}
			}
		}
		&.wizard {
			h3 {
				color: $WIZARD;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $WIZARD;
				}
				.proficiency {
					&--element {
						background: $WIZARD;
						&:after {
							color: $WIZARD;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $WIZARD;
							}
						}
						.prerequisit {
							&:after {
								background: $WIZARD;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $WIZARD;
								}
							}
							&:after {
								background: $WIZARD;
							}
							&:hover {
								background: $WIZARD;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $WIZARD;
					}
					svg > g > path {
						fill: $WIZARD;
					}
				}
			}
			button:hover {
				background: $WIZARD;
			}
			.close-wrapper .close {
				&.active {
					background: $WIZARD;
				}
			}
		}
		&.warlock {
			h3 {
				color: $WARLOCK;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $WARLOCK;
				}
				.proficiency {
					&--element {
						background: $WARLOCK;
						&:after {
							color: $WARLOCK;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $WARLOCK;
							}
						}
						.prerequisit {
							&:after {
								background: $WARLOCK;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $WARLOCK;
								}
							}
							&:after {
								background: $WARLOCK;
							}
							&:hover {
								background: $WARLOCK;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $WARLOCK;
					}
					svg > g > path {
						fill: $WARLOCK;
					}
				}
			}
			button:hover {
				background: $WARLOCK;
			}
			.close-wrapper .close {
				&.active {
					background: $WARLOCK;
				}
			}
		}
		&.sorcerer {
			h3 {
				color: $SORCERER;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $SORCERER;
				}
				.proficiency {
					&--element {
						background: $SORCERER;
						&:after {
							color: $SORCERER;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $SORCERER;
							}
						}
						.prerequisit {
							&:after {
								background: $SORCERER;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $SORCERER;
								}
							}
							&:after {
								background: $SORCERER;
							}
							&:hover {
								background: $SORCERER;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $SORCERER;
					}
					svg > g > path {
						fill: $SORCERER;
					}
				}
			}
			button:hover {
				background: $SORCERER;
			}
			.close-wrapper .close {
				&.active {
					background: $SORCERER;
				}
			}
		}
		&.rogue {
			h3 {
				color: $ROGUE;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $ROGUE;
				}
				.proficiency {
					&--element {
						background: $ROGUE;
						&:after {
							color: $ROGUE;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $ROGUE;
							}
						}
						.prerequisit {
							&:after {
								background: $ROGUE;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $ROGUE;
								}
							}
							&:after {
								background: $ROGUE;
							}
							&:hover {
								background: $ROGUE;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $ROGUE;
					}
					svg > g > path {
						fill: $ROGUE;
					}
				}
			}
			button:hover {
				background: $ROGUE;
			}
			.close-wrapper .close {
				&.active {
					background: $ROGUE;
				}
			}
		}
		&.ranger {
			h3 {
				color: $RANGER;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $RANGER;
				}
				.proficiency {
					&--element {
						background: $RANGER;
						&:after {
							color: $RANGER;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $RANGER;
							}
						}
						.prerequisit {
							&:after {
								background: $RANGER;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $RANGER;
								}
							}
							&:after {
								background: $RANGER;
							}
							&:hover {
								background: $RANGER;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $RANGER;
					}
					svg > g > path {
						fill: $RANGER;
					}
				}
			}
			button:hover {
				background: $RANGER;
			}
			.close-wrapper .close {
				&.active {
					background: $RANGER;
				}
			}
		}
		&.paladin {
			h3 {
				color: $PALADIN;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $PALADIN;
				}
				.proficiency {
					&--element {
						background: $PALADIN;
						&:after {
							color: $PALADIN;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $PALADIN;
							}
						}
						.prerequisit {
							&:after {
								background: $PALADIN;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $PALADIN;
								}
							}
							&:after {
								background: $PALADIN;
							}
							&:hover {
								background: $PALADIN;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $PALADIN;
					}
					svg > g > path {
						fill: $PALADIN;
					}
				}
			}
			button:hover {
				background: $PALADIN;
			}
			.close-wrapper .close {
				&.active {
					background: $PALADIN;
				}
			}
		}
		&.monk {
			h3 {
				color: $MONK;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $MONK;
				}
				.proficiency {
					&--element {
						background: $MONK;
						&:after {
							color: $MONK;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $MONK;
							}
						}
						.prerequisit {
							&:after {
								background: $MONK;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $MONK;
								}
							}
							&:after {
								background: $MONK;
							}
							&:hover {
								background: $MONK;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $MONK;
					}
					svg > g > path {
						fill: $MONK;
					}
				}
			}
			button:hover {
				background: $MONK;
			}
			.close-wrapper .close {
				&.active {
					background: $MONK;
				}
			}
		}
		&.fighter {
			h3 {
				color: $FIGHTER;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $FIGHTER;
				}
				.proficiency {
					&--element {
						background: $FIGHTER;
						&:after {
							color: $FIGHTER;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $FIGHTER;
							}
						}
						.prerequisit {
							&:after {
								background: $FIGHTER;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $FIGHTER;
								}
							}
							&:after {
								background: $FIGHTER;
							}
							&:hover {
								background: $FIGHTER;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $FIGHTER;
					}
					svg > g > path {
						fill: $FIGHTER;
					}
				}
			}
			button:hover {
				background: $FIGHTER;
			}
			.close-wrapper .close {
				&.active {
					background: $FIGHTER;
				}
			}
		}
		&.cleric {
			h3 {
				color: $CLERIC;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $CLERIC;
				}
				.proficiency {
					&--element {
						background: $CLERIC;
						&:after {
							color: $CLERIC;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $CLERIC;
							}
						}
						.prerequisit {
							&:after {
								background: $CLERIC;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $CLERIC;
								}
							}
							&:after {
								background: $CLERIC;
							}
							&:hover {
								background: $CLERIC;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $CLERIC;
					}
					svg > g > path {
						fill: $CLERIC;
					}
				}
			}
			button:hover {
				background: $CLERIC;
			}
			.close-wrapper .close {
				&.active {
					background: $CLERIC;
				}
			}
		}
		&.druid {
			h3 {
				color: $DRUID;
			}
			.base-info {
				.stripe .hit-dice li .label {
					background: $DRUID;
				}
				.proficiency {
					&--element {
						background: $DRUID;
						&:after {
							color: $DRUID;
						}
					}
				}
				.level-wrapper {
					.level {
						.feat:hover {
							.name {
								color: $DRUID;
							}
						}
						.prerequisit {
							&:after {
								background: $DRUID;
							}
						}
						.optional {
							&.active {
								&:after {
									background: $DRUID;
								}
							}
							&:after {
								background: $DRUID;
							}
							&:hover {
								background: $DRUID;
								.name {
									color: $BACKGROUND;
								}
							}
						}
					}
				}
			}
			.class-card {
				&.active {
					h3 {
						color: $DRUID;
					}
					svg > g > path {
						fill: $DRUID;
					}
				}
			}
			button:hover {
				background: $DRUID;
			}
			.close-wrapper .close {
				&.active {
					background: $DRUID;
				}
			}
		}
	}
}